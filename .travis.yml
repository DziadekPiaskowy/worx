sudo: required
dist: trusty
os: linux
language: generic
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
git:
  depth: false
addons:
  sshknownhosts: 88.198.86.0
env:
  global:
  - MAKEJOBS=-j4
  - RUN_TESTS=false
  - BVER=1.4.0
  - CHECK_DOC=0
  - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
  - CCACHE_SIZE=100M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - CCACHE_COMPRESS=1
  - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
  - SDK_URL=https://bitcoincore.org/depends-sources/sdks
  - PYTHON_DEBUG=1
  - WINEDEBUG=fixme-all
  - REMOTEAPPDIR=/var/www/files.worxcoin.io/htdocs/releases/
  - REMOTEUSER=worx
  - REMOTEHOST=88.198.86.0
  - PORT=8080
  - PPA="ppa:bitcoin/bitcoin"
  - RBITS=$(cat /dev/urandom | head -c 64 | base64 | tr -cd '[:alnum:]' | head -c 8 ;) 
  matrix:
  - HOST=arm-linux-gnueabihf PACKAGES="g++-arm-linux-gnueabihf"
    CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports --with-gui=auto --disable-maintainer-mode --disable-zmq"
  - HOST=i686-w64-mingw32 PPA="ppa:bitcoin/bitcoin" DPKG_ADD_ARCH="i386" DEP_OPTS="" PACKAGES="python3
    python3-dev python3-pip nsis g++-mingw-w64-i686 bc faketime wine1.6 bc build-essential libc6-dev
    libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev curl g++-mingw-w64-x86-64 
    mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libminiupnpc-dev libqrencode-dev flex libelf-dev libdwarf-dev"
    RUN_TESTS=false GOAL="deploy" BITCOIN_CONFIG="--disable-gui-tests --disable-maintainer-mode --disable-bench --enable-reduce-exports --disable-zmq --enable-gui --with-gui=auto LDFLAGS=-static-libstdc++" BDB_INCLUDE_PATH="/usr/include" BDB_LIB_PATH="/usr/lib"
 # - HOST=i686-w64-mingw32 PPA="ppa:bitcoin/bitcoin" DPKG_ADD_ARCH="i386" DEP_OPTS="" PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev  libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
 #   RUN_TESTS=false GOAL="deploy" BITCOIN_CONFIG="--disable-gui-tests --disable-bench --enable-reduce-exports --disable-zmq --enable-gui --with-gui=auto LDFLAGS=-static-libstdc++" BDB_INCLUDE_PATH="/usr/include" BDB_LIB_PATH="/usr/lib"
  - HOST=x86_64-w64-mingw32 PPA="ppa:bitcoin/bitcoin" DEP_OPTS="" PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev  libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
    RUN_TESTS=false GOAL="deploy" BITCOIN_CONFIG="--enable-reduce-exports --disable-zmq  --disable-bench --disable-gui-tests --with-gui=auto LDFLAGS=-static-libstdc++" BDB_INCLUDE_PATH="/usr/include" BDB_LIB_PATH="/usr/lib"
 # - HOST=i686-w64-mingw32 PPA="ppa:bitcoin/bitcoin" DEP_OPTS="" PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev  libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
 #   RUN_TESTS=false GOAL="deploy" BITCOIN_CONFIG="--disable-gui-tests --disable-bench --enable-reduce-exports --disable-zmq --enable-gui --with-gui=auto LDFLAGS=-static-libstdc++" BDB_INCLUDE_PATH="/usr/include" BDB_LIB_PATH="/usr/lib"
 # - HOST=x86_64-w64-mingw32 PPA="ppa:bitcoin/bitcoin" DEP_OPTS="" PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev  libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
 #   RUN_TESTS=false GOAL="deploy" BITCOIN_CONFIG="--disable-gui-tests --disable-bench --enable-reduce-exports --disable-zmq --enable-gui --with-gui=auto LDFLAGS=-static-libstdc++" BDB_INCLUDE_PATH="/usr/include" BDB_LIB_PATH="/usr/lib"
  - HOST=x86_64-linux-gnu PPA="ppa:bitcoin/bitcoin" DEP_OPTS="" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.6"
    RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--enable-reduce-exports"
  - HOST=i686-linux-gnu PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev  libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
    DEP_OPTS="" RUN_TESTS=false GOAL="install" BITCOIN_CONFIG="--disable-gui-tests --disable-bench --enable-gui --with-gui=auto --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" PYZQM=true
  #- HOST=x86_64-linux-gnu PACKAGES="g++-multilib python3 python3-dev python3-pip nsis bc faketime wine1.6 bc build-essential libc6-dev libtool autotools-dev automake cmake pkg-config bsdmainutils imagemagick libqt4-dev qt4-dev-tools libqt4-dev-bin libqt4-opengl-dev libqtwebkit-dev qt4-linguist-tools libminiupnpc-dev curl g++-mingw-w64-x86-64 mingw-w64-x86-64-dev g++-mingw-w64-i686 mingw-w64-i686-dev libevent-dev libboost-system-dev libboost-filesystem-dev libminiupnpc-dev libprotobuf-dev protobuf-compiler libqrencode-dev flex libelf-dev libdwarf-dev ttf-mscorefonts-installer ttf-mscorefonts-installer nsis-pluginapi libdb4.8++ libdb4.8 libdb4.8-dev db4.8-util libdb4.8++-dev firebird-dev libegl1-mesa-dev libpq-dev libsqlite3-dev unixodbc-dev"
  #  DEP_OPTS="" RUN_TESTS=false GOAL="install" 
  #  BITCOIN_CONFIG="--enable-zmq --disable-gui-tests --disable-bench --disable-maintainer-mode --enable-glibc-back-compat --enable-reduce-exports --enable-gui --with-gui=auto CPPFLAGS=-DDEBUG_LOCKORDER "
  #  PYZMQ=true
  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG="--enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"
#  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler" 
#    BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror --enable-sse2" OSX_SDK=10.11 GOAL="deploy"
#  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler" 
#    BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror --enable-sse2" OSX_SDK=10.8 GOAL="deploy"
#  - HOST=x86_64-apple-darwin11 PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler" 
#    BITCOIN_CONFIG="--enable-gui --enable-reduce-exports --enable-werror --enable-sse2" OSX_SDK=10.13 GOAL="deploy"
before_install:
- openssl aes-256-cbc -K $encrypted_96e672130830_key -iv $encrypted_96e672130830_iv -in deploy.enc -out deploy -d
- export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
- if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
- if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ;
  fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
- if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends
  --no-upgrade -qq $PACKAGES; fi
- export BDB_INCLUDE_PATH="/usr/include"
- export BDB_LIB_PATH="/usr/lib"
- #sudo mkdir /usr/include/db4; sudo cp $TRAVIS_BUILD_DIR/depends/$HOST/include/db_cxx.h /usr/include/db4/
before_script:
- unset CC; unset CXX
- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi
- mkdir -p depends/SDKs depends/sdk-sources
- if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz;
  fi
- if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then
  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
- echo -e $MAKEJOBS $HOST $DEP_OPTS
- echo -e $PYZMQ $OSX_SDK $PPA $PACKAGES $PATH $OUTDIR $USE_SHELL $GOAL
- pwd ; echo before_script make1
- ls
- sudo make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
- chmod 600 deploy && mv deploy ~/.ssh/id_rsa
script:
- export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
- if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
- export BDB_INCLUDE_PATH="/usr/include"
- export BDB_LIB_PATH="/usr/lib"
- BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib --disable-bench --disable-maintainer-mode --enable-static --enable-shared"
- depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
- test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
- mkdir build && cd build
- "../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || (
  cat config.log && false)"
- pwd ; echo script_make1
- ls
- make distdir VERSION=$HOST
- cd worx-$HOST
- "./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG ||
  ( cat config.log && false)"
- pwd ; echo script_make2
- ls
- sudo make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && sudo
  make $GOAL V=1 ; false )
- export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
- if [ "$RUN_TESTS" = "true" ]; then sudo make $MAKEJOBS check VERBOSE=1; fi
- if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
after_script:
- echo $TRAVIS_COMMIT_RANGE
- echo $TRAVIS_COMMIT_LOG
- ls -al $OUTDIR
before_deploy:
- cd /home/travis/build/CryptoDragonLady/worx/; find . |grep tar.gz
- find . |grep dmg
- if [ -n "$OSX_SDK" ]; then cp ./$RNAME/Worx-Core.dmg ./$RNAME.dmg; fi
- if [ -n "$OSX_SDK" ]; then ./scripts/relpush.sh $RNAME.dmg; export FRNAME=$RNAME.dmg ; fi
- if [ -z "$OSX_SDK" ]; then ./scripts/relpush.sh $RNAME.tar.gz; export FRNAME=$RNAME.tar.gz ; fi
- ssh worx@88.198.86.0 "/var/www/files.worxcoin.io/htdocs/reldir.sh $GITCOM"
- echo $FRNAME $GITCOM
- ssh worx@88.198.86.0 "/var/www/files.worxcoin.io/htdocs/relmove.sh $FRNAME $GITCOM"
after_success:
- export RNAME=$HOST-$BVER
- export OUTDIR=/home/travis/build/CryptoDragonLady/worx/$RNAME
- git config --local user.name "CryptoDragonLady"
- git config --local user.email "webmaster@worxcoin.io"
- git tag "$RNAME-$(git log --format=%h -1)-$RBITS"
- export RNAME=$RNAME-$(git log --format=%h -1)-$RBITS
- export GITCOM=$(git log --format=%h -1)
- mkdir /home/travis/build/CryptoDragonLady/worx/$RNAME
- if [[ -n "/home/travis/build/CryptoDragonLady/worx/build/worx-i686-w64-mingw32/worx-1.4.0-win32-setup.exe" ]]; then cp /home/travis/build/CryptoDragonLady/worx/build/worx-i686-w64-mingw32/worx-1.4.0-win32-setup.exe /home/travis/build/CryptoDragonLady/worx/$RNAME ; fi
- if [[ -n "/home/travis/build/CryptoDragonLady/worx/build/worx-x86_64-w64-mingw32/worx-1.4.0-win64-setup.exe" ]]; then cp /home/travis/build/CryptoDragonLady/worx/build/worx-x86_64-w64-mingw32/worx-1.4.0-win64-setup.exe /home/travis/build/CryptoDragonLady/worx/$RNAME ; fi
- mkdir /home/travis/build/CryptoDragonLady/worx/$RNAME/lib
- if [ -n "$OSX_SDK" ]; then cp /home/travis/build/CryptoDragonLady/worx/build/worx-x86_64-apple-darwin11/Worx-Core.dmg /home/travis/build/CryptoDragonLady/worx/$RNAME/; cd /home/travis/build/CryptoDragonLady/worx/$RNAME/; fi
- if [ -z "$OSX_SDK" ]; then cp /lib/libbitcoin* /home/travis/build/CryptoDragonLady/worx/$RNAME/lib/; ls /lib; fi
- if [ -z "$OSX_SDK" ]; then cp /bin/worx* /home/travis/build/CryptoDragonLady/worx/$RNAME/; cd /home/travis/build/CryptoDragonLady/worx; fi
- if [ -z "$OSX_SDK" ]; then tar -cf $RNAME.tar $RNAME && gzip -9 $RNAME.tar; fi
- ls -al /home/travis/build/CryptoDragonLady/worx/$RNAME/.*
- if [ -n "$OSX_SDK" ]; then "/home/travis/build/CryptoDragonLady/worx/scripts/relpush.sh /home/travis/build/CryptoDragonLady/worx/$RNAME/Worx-Core.dmg"; fi
- if [ -n "$OSX_SDK" ]; then "cp /home/travis/build/CryptoDragonLady/worx/$RNAME/Worx-Core.dmg /home/travis/build/CryptoDragonLady/worx/$RNAME.dmg"; fi
- if [ -z "$OSX_SDK" ]; then "/home/travis/build/CryptoDragonLady/worx/scripts/relpush.sh /home/travis/build/CryptoDragonLady/worx/$RNAME.tar.gz"; fi
deploy:
  provider: releases
  api_key:
    secure: SrIFjyo6R5dYkmGM5/MA4qnzmw++kO2Ri/kIZ7WFKkX4VJpUV7OH3lv3GaXP1wjwI0Ic4TBMwoy1CmZad0PJKXSOsPz2zSg5jE34Ty8TtWqP5D/j9QMMHEmdofNqewROvh3W+/lISVlGY3w7L06k9DCxZDpPRB/mWBlAeyTb2TFj0Sohf1dCykvenTAbDZ8frt5ZESVFSp7YQDYW4gs3+VknMucq0ukJemDIwGKFmH8muVLeO5uSh+EHNsunKxUN4nx1ZmAJfhFUh3r/bc+4nkdxGBYjEL8daAd2hWY419myzDOx7eC1xzOJjImjW+lWGT2YwB467R5olEo22Wk5onMUWu2sgGeSnhNkMpwRaV4uA18L2+iaV9WUfr5OYJpiiPrPwsaZVhg4DlAEvMdRKyD0lXkgSc4Bq8WBYwqIOonAugEMy3qRhy4derdohpV75Y78HJKkRCSKOIeGtoH3WSl0ZiBhwttHHkzMcwD0+s8JyqQgQC/5HGGHQJPdmxjQYn/iGAeJCiztXS44ICj7R15otOzz3x0DEaLksYLXH8zP6Ke+Xo+GRTPnCB9J9uCDJasLxk1icJzAAZ36mvhYhkReIX1Ss1q3TFUFOjFKoY2k1rMNIlQLlR0dbChoEvWaP9JzwfJT6zNQaTe8vXqofVxvT2BPG5vOKFmg0AicUFo=
  file: /home/travis/build/CryptoDragonLady/worx/$FRNAME
  file: $OUTDIR/$RNAME.*
  file: $OUTDIR/$FRNAME.*
  file: /home/travis/build/CryptoDragonLady/worx/*.exe
  file: /home/travis/build/CryptoDragonLady/worx/*.tar.gz
  file: /home/travis/build/CryptoDragonLady/worx/*.dmg
  file: /home/travis/build/CryptoDragonLady/worx/build/worx-i686-w64-mingw32/worx*.exe
  file: /home/travis/build/CryptoDragonLady/worx/build/worx-x86_64-w64-mingw32/worx*.exe
  file: /home/travis/build/CryptoDragonLady/worx/build/worx-i686-w64-mingw32/Worx*.exe
  file: /home/travis/build/CryptoDragonLady/worx/build/worx-i686-w64-mingw32/Worx*.dmg
  skip_cleanup: true
  on: 
repo: CryptoDragonLady/worx

